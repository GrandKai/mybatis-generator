<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linlong.manager.mapper.performanceInfoMapper">
  <resultMap id="BaseResultMap" type="com.linlong.salary.entity.performanceInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="organize_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="staff_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="performance" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="project_funds" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_one" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_two" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_three" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, organize_code, staff_number, performance, project_funds, other_one, other_two, 
    other_three, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from performance_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from performance_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info (id, organize_code, staff_number, 
      performance, project_funds, other_one, 
      other_two, other_three, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{organizeCode,jdbcType=VARCHAR}, #{staffNumber,jdbcType=INTEGER}, 
      #{performance,jdbcType=DECIMAL}, #{projectFunds,jdbcType=DECIMAL}, #{otherOne,jdbcType=DECIMAL}, 
      #{otherTwo,jdbcType=DECIMAL}, #{otherThree,jdbcType=DECIMAL}, #{createTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizeCode != null">
        organize_code,
      </if>
      <if test="staffNumber != null">
        staff_number,
      </if>
      <if test="performance != null">
        performance,
      </if>
      <if test="projectFunds != null">
        project_funds,
      </if>
      <if test="otherOne != null">
        other_one,
      </if>
      <if test="otherTwo != null">
        other_two,
      </if>
      <if test="otherThree != null">
        other_three,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organizeCode != null">
        #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    <set>
      <if test="organizeCode != null">
        organize_code = #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        staff_number = #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        performance = #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        project_funds = #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        other_one = #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        other_two = #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        other_three = #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    set organize_code = #{organizeCode,jdbcType=VARCHAR},
      staff_number = #{staffNumber,jdbcType=INTEGER},
      performance = #{performance,jdbcType=DECIMAL},
      project_funds = #{projectFunds,jdbcType=DECIMAL},
      other_one = #{otherOne,jdbcType=DECIMAL},
      other_two = #{otherTwo,jdbcType=DECIMAL},
      other_three = #{otherThree,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.linlong.salary.entity.performanceInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="organize_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="staff_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="performance" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="project_funds" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_one" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_two" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_three" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, organize_code, staff_number, performance, project_funds, other_one, other_two, 
    other_three, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from performance_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from performance_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info (id, organize_code, staff_number, 
      performance, project_funds, other_one, 
      other_two, other_three, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{organizeCode,jdbcType=VARCHAR}, #{staffNumber,jdbcType=INTEGER}, 
      #{performance,jdbcType=DECIMAL}, #{projectFunds,jdbcType=DECIMAL}, #{otherOne,jdbcType=DECIMAL}, 
      #{otherTwo,jdbcType=DECIMAL}, #{otherThree,jdbcType=DECIMAL}, #{createTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizeCode != null">
        organize_code,
      </if>
      <if test="staffNumber != null">
        staff_number,
      </if>
      <if test="performance != null">
        performance,
      </if>
      <if test="projectFunds != null">
        project_funds,
      </if>
      <if test="otherOne != null">
        other_one,
      </if>
      <if test="otherTwo != null">
        other_two,
      </if>
      <if test="otherThree != null">
        other_three,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organizeCode != null">
        #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    <set>
      <if test="organizeCode != null">
        organize_code = #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        staff_number = #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        performance = #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        project_funds = #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        other_one = #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        other_two = #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        other_three = #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    set organize_code = #{organizeCode,jdbcType=VARCHAR},
      staff_number = #{staffNumber,jdbcType=INTEGER},
      performance = #{performance,jdbcType=DECIMAL},
      project_funds = #{projectFunds,jdbcType=DECIMAL},
      other_one = #{otherOne,jdbcType=DECIMAL},
      other_two = #{otherTwo,jdbcType=DECIMAL},
      other_three = #{otherThree,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.linlong.salary.entity.performanceInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="organize_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="staff_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="performance" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="project_funds" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_one" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_two" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_three" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, organize_code, staff_number, performance, project_funds, other_one, other_two, 
    other_three, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from performance_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from performance_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info (id, organize_code, staff_number, 
      performance, project_funds, other_one, 
      other_two, other_three, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{organizeCode,jdbcType=VARCHAR}, #{staffNumber,jdbcType=INTEGER}, 
      #{performance,jdbcType=DECIMAL}, #{projectFunds,jdbcType=DECIMAL}, #{otherOne,jdbcType=DECIMAL}, 
      #{otherTwo,jdbcType=DECIMAL}, #{otherThree,jdbcType=DECIMAL}, #{createTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizeCode != null">
        organize_code,
      </if>
      <if test="staffNumber != null">
        staff_number,
      </if>
      <if test="performance != null">
        performance,
      </if>
      <if test="projectFunds != null">
        project_funds,
      </if>
      <if test="otherOne != null">
        other_one,
      </if>
      <if test="otherTwo != null">
        other_two,
      </if>
      <if test="otherThree != null">
        other_three,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organizeCode != null">
        #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    <set>
      <if test="organizeCode != null">
        organize_code = #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        staff_number = #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        performance = #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        project_funds = #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        other_one = #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        other_two = #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        other_three = #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    set organize_code = #{organizeCode,jdbcType=VARCHAR},
      staff_number = #{staffNumber,jdbcType=INTEGER},
      performance = #{performance,jdbcType=DECIMAL},
      project_funds = #{projectFunds,jdbcType=DECIMAL},
      other_one = #{otherOne,jdbcType=DECIMAL},
      other_two = #{otherTwo,jdbcType=DECIMAL},
      other_three = #{otherThree,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.linlong.salary.entity.performanceInfo">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="organize_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="staff_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="performance" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="project_funds" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_one" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_two" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="other_three" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, organize_code, staff_number, performance, project_funds, other_one, other_two, 
    other_three, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from performance_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from performance_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info (id, organize_code, staff_number, 
      performance, project_funds, other_one, 
      other_two, other_three, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{organizeCode,jdbcType=VARCHAR}, #{staffNumber,jdbcType=INTEGER}, 
      #{performance,jdbcType=DECIMAL}, #{projectFunds,jdbcType=DECIMAL}, #{otherOne,jdbcType=DECIMAL}, 
      #{otherTwo,jdbcType=DECIMAL}, #{otherThree,jdbcType=DECIMAL}, #{createTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.linlong.salary.entity.performanceInfo">
    insert into performance_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="organizeCode != null">
        organize_code,
      </if>
      <if test="staffNumber != null">
        staff_number,
      </if>
      <if test="performance != null">
        performance,
      </if>
      <if test="projectFunds != null">
        project_funds,
      </if>
      <if test="otherOne != null">
        other_one,
      </if>
      <if test="otherTwo != null">
        other_two,
      </if>
      <if test="otherThree != null">
        other_three,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organizeCode != null">
        #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    <set>
      <if test="organizeCode != null">
        organize_code = #{organizeCode,jdbcType=VARCHAR},
      </if>
      <if test="staffNumber != null">
        staff_number = #{staffNumber,jdbcType=INTEGER},
      </if>
      <if test="performance != null">
        performance = #{performance,jdbcType=DECIMAL},
      </if>
      <if test="projectFunds != null">
        project_funds = #{projectFunds,jdbcType=DECIMAL},
      </if>
      <if test="otherOne != null">
        other_one = #{otherOne,jdbcType=DECIMAL},
      </if>
      <if test="otherTwo != null">
        other_two = #{otherTwo,jdbcType=DECIMAL},
      </if>
      <if test="otherThree != null">
        other_three = #{otherThree,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linlong.salary.entity.performanceInfo">
    update performance_info
    set organize_code = #{organizeCode,jdbcType=VARCHAR},
      staff_number = #{staffNumber,jdbcType=INTEGER},
      performance = #{performance,jdbcType=DECIMAL},
      project_funds = #{projectFunds,jdbcType=DECIMAL},
      other_one = #{otherOne,jdbcType=DECIMAL},
      other_two = #{otherTwo,jdbcType=DECIMAL},
      other_three = #{otherThree,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>